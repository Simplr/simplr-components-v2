{"version":3,"file":"simplr-component-base.js","sourceRoot":"","sources":["../simplr-component-base.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAE3C,MAAM,OAAgB,mBAAoB,SAAQ,WAAW;IAQzD;QACI,KAAK,EAAE,CAAC;QANZ,gBAAW,GAAwB,IAAI,GAAG,EAAE,CAAC;QAC7C,qBAAgB,GAAY,KAAK,CAAC;QAClC,uBAAkB,GAAsB,IAAI,GAAG,EAAE,CAAC;QAClD,gBAAW,GAAY,KAAK,CAAC;QAIzB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,6CAA6C;IAC7C,YAAY,KAAU,CAAC;IAEvB,6CAA6C;IAC7C,WAAW,KAAU,CAAC;IAEtB,OAAO,CAAC,kBAAqC,IAAS,CAAC;IAEvD,MAAM;QACF,eAAe,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,wBAAwB,CAAC,IAAS,EAAE,QAAa,EAAE,QAAa;QAC5D,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACtE,IAAI,QAAQ,KAAK,QAAQ;YAAE,OAAO;IACtC,CAAC;IAEM,aAAa;QAChB,IAAI,IAAI,CAAC,gBAAgB;YAAE,OAAO;QAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,MAAM,CAAC,qBAAqB,CAAC,GAAG,EAAE;YAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,SAAiB,EAAE,YAAiB;QACxC,MAAM,KAAK,GAAU,IAAI,WAAW,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,oBAAoB,CAAC,IAAY,EAAE,QAAiB;QAChD,yCAAyC;QACzC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC5C,+CAA+C;QAC/C,IAAI,IAAI,CAAC,WAAW;YAAE,OAAO;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,gEAAgE;QAChE,MAAM,CAAC,qBAAqB,CAAC,GAAG,EAAE;YAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtC,sBAAsB;YACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;;AA5DM,uBAAG,GAAuB,SAAS,CAAC","sourcesContent":["import { TemplateResult } from 'lit-html';\nimport { UpdatedProperties } from './decorators';\nimport { renderComponent } from './render';\n\nexport abstract class SimplrComponentBase extends HTMLElement {\n    static _is: string | undefined = undefined;\n\n    _properties: ComponentProperties = new Map();\n    _renderRequested: boolean = false;\n    _updatedProperties: UpdatedProperties = new Map();\n    _willUpdate: boolean = false;\n\n    constructor() {\n        super();\n        this.requestRender();\n    }\n\n    //TODO: Create Interface objects and payloads\n    beforeRender(): void {}\n\n    //TODO: Create Interface objects and payloads\n    afterRender(): void {}\n\n    updated(_updatedProperties: UpdatedProperties): void {}\n\n    render(): void {\n        renderComponent(this);\n    }\n\n    attributeChangedCallback(name: any, oldValue: any, newValue: any) {\n        console.log('AttributeChangedCallback', { name, oldValue, newValue });\n        if (oldValue === newValue) return;\n    }\n\n    public requestRender(): void {\n        if (this._renderRequested) return;\n        this._renderRequested = true;\n\n        window.requestAnimationFrame(() => {\n            this.beforeRender();\n            this.render();\n            this.afterRender();\n            this._renderRequested = false;\n        });\n    }\n\n    publish(eventName: string, eventPayload: any) {\n        const event: Event = new CustomEvent(eventName, { detail: eventPayload });\n        this.dispatchEvent(event);\n    }\n\n    _queuePropertyUpdate(name: string, oldValue: unknown) {\n        // Set updated property to map of updated\n        this._updatedProperties.set(name, oldValue);\n        // If already going to update, don't re-trigger\n        if (this._willUpdate) return;\n        this._willUpdate = true;\n        // Await for next frame, then trigger updated and render request\n        window.requestAnimationFrame(() => {\n            this.updated(this._updatedProperties);\n            // Empty updated props\n            this._updatedProperties = new Map();\n            this.requestRender();\n            this._willUpdate = false;\n        });\n    }\n\n    abstract get html(): TemplateResult;\n    abstract get css(): string;\n}\n\nexport type ComponentProperties<T = any> = keyof T extends PropertyKey ? Map<keyof T, unknown> : never;\n"]}